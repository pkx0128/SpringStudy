<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
<!--    配置spring的ioc,把Service对象配置进来-->
    <bean id="accountService" class="com.pankx.service.impl.AccountServiceImpl"/>

<!--    spring中基于xml的AOP配置步骤
        1.把通知的bean交给spring来管理
        2.使用aop:config标签表示开始aop配置
        3.使用aop:aspect标签表明配置切面
                id属性：给切面一个唯一标识
                ref属性：是指通知类bean的id
        4.使用aop:aspect标签中的通知类型标签配置相应的通知类型
            我们的示例是让printlog方法在切入点执行之前执行，所以是前置通知
            aop:before前置通知
                method：用于指定通知类中哪个方法为前置通知
                pointcut:用于指定切入点表达式，该表达式的涵义为指的是对业务层中哪些方法增强
            切入点表达式的写法：
                关键字：execution(表达式）
                表达式：访问修饰符 返回值 包名.类名.方法(参数列表）
            全通配写法：
                * *..*.*(..)
            实际开发中通常写法：
                切到业务层实现类下的所有方法
                * com.pankx.service.impl.*.*(..)

-->
<!--    配置Logger类-->
    <bean id="logger" class="com.pankx.utils.Logger"/>
<!--    配置AOP-->
    <aop:config>
<!--        配置切面-->
        <aop:aspect id="loggeradvice" ref="logger">
<!--            配置通知类型,并建立通知方法与切入点方法的联系-->
<!--            <aop:before method="printLog" pointcut="execution(public void com.pankx.service.impl.AccountServiceImpl.saveAccount())"></aop:before>-->
            <aop:before method="printLog" pointcut="execution(* com.pankx.service.impl.*.*(..))"></aop:before>
        </aop:aspect>
    </aop:config>
</beans>